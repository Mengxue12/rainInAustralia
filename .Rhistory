library(ggplot2)
library(kableExtra)
library(gridExtra)
library(stats)
library(cluster)
library(factoextra)
library(FactoMineR)
library(mclust)
library(caret)
# Need caret library
# To have reproducibility of the sampling
set.seed(100)
scaled <- read.csv('scaled.csv')
# Removing the first two column describing the number of the row and the city
scaled <- scaled[3:ncol(scaled)]
# Preparing data for MBC
# Keeping just numeric values
df.mbc <- scaled %>% dplyr::select(where(is.numeric))
x <- scaled[16:18]
dmy <- dummyVars(" ~ .", data = x)
trsf <- data.frame(predict(dmy, newdata = x))
df.mbc <- cbind(df.mbc,trsf)
df.mbc <-df.mbc[sample(nrow(df.mbc),1000), ]
# Preparing data for HC
dmy <- dummyVars(" ~ .", data = scaled)
trsf <- data.frame(predict(dmy, newdata = scaled))
# Random sampling to make the clustering computation fit in my machine
df.pc <- trsf[sample(nrow(trsf),1000), ]
summary(df.mbc)
df.mbc
mc2 <- Mclust(mbc,2)
summary(df.mbc)
df.mbc
mc2 <- Mclust(df.mbc,2)
mc3 <- Mclust(df.mbc,4)
fviz_mclust(mc, "uncertainty", palette = "jco")
summary(df.mbc)
df.mbc
mc2 <- Mclust(df.mbc,2)
mc4 <- Mclust(df.mbc,4)
fviz_mclust(mc2, "uncertainty", palette = "jco")
fviz_mclust(mc4, "uncertainty", palette = "jco")
mc2$parameters$mean
mc4$parameters$mean
summary(df.pc)
df.pc
k2 <- kmeans(df.pc, centers = 2, nstart = 25)
k3 <- kmeans(df.pc, centers = 3, nstart = 25)
k4 <- kmeans(df.pc, centers = 4, nstart = 25)
k5 <- kmeans(df.pc, centers = 5, nstart = 25)
p1 <- fviz_cluster(k2, geom = "point", data = df.hpc) + ggtitle("k = 2")
summary(df.pc)
df.pc
k2 <- kmeans(df.pc, centers = 2, nstart = 25)
k3 <- kmeans(df.pc, centers = 3, nstart = 25)
k4 <- kmeans(df.pc, centers = 4, nstart = 25)
k5 <- kmeans(df.pc, centers = 5, nstart = 25)
p1 <- fviz_cluster(k2, geom = "point", data = df.pc) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df.pc) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df.pc) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = df.pc) + ggtitle("k = 5")
grid.arrange(p1, p2, p3, p4, nrow = 2)
fviz_nbclust(df.hpc, kmeans, method = "silhouette")
fviz_nbclust(df.pc, kmeans, method = "silhouette")
k2$centers[,c('MinTemp','MaxTemp','RainTodayNo','RainTodayYes','RainTomorrowNo','RainTomorrowYes','Seasonfall','Seasonspring','Seasonsummer','Seasonwinter')]
?kmeans
mc <- Mclust(df.mbc)
mc
mc$parameters
fviz_mclust(mc, "uncertainty", palette = "jco")
summary(df.mbc)
df.mbc
mc <- Mclust(df.mbc)
mc2 <- Mclust(df.mbc,2)
mc4 <- Mclust(df.mbc,4)
fviz_mclust(mc, "uncertainty", palette = "jco")
fviz_mclust(mc2, "uncertainty", palette = "jco")
fviz_mclust(mc, "uncertainty", palette = "jco")
summary(mc)
k2
k2$cluster
k2
k2$centers
k2$totss
k2
k2$withinss
k2$tot.withinss
k2$tot.betweenss
k2$betweenss
k2$size
?kmeans
knitr::opts_chunk$set(echo = TRUE)
# Need caret library
# To have reproducibility of the sampling
set.seed(100)
scaled <- read.csv('scaled.csv')
# Removing the first two column describing the number of the row and the city
scaled <- scaled[3:ncol(scaled)]
# Preparing data for MBC
# Keeping just numeric values
df.mbc <- scaled %>% dplyr::select(where(is.numeric))
library(dplyr)
library(ggplot2)
library(kableExtra)
library(gridExtra)
library(stats)
library(cluster)
library(factoextra)
library(FactoMineR)
library(mclust)
library(caret)
# Need caret library
# To have reproducibility of the sampling
set.seed(100)
scaled <- read.csv('scaled.csv')
# Removing the first two column describing the number of the row and the city
scaled <- scaled[3:ncol(scaled)]
# Preparing data for MBC
# Keeping just numeric values
df.mbc <- scaled %>% dplyr::select(where(is.numeric))
# The column RainToday RainTomorrow and Season
x <- scaled[16:17]
dmy <- dummyVars(" ~ .", data = x)
trsf <- data.frame(predict(dmy, newdata = x))
df.mbc <- cbind(df.mbc,trsf)
df.mbc <-df.mbc[sample(nrow(df.mbc),1000), ]
# Preparing data for HC
dmy <- dummyVars(" ~ .", data = scaled)
trsf <- data.frame(predict(dmy, newdata = scaled))
# Random sampling to make the clustering computation fit in my machine
df.pc <- trsf[sample(nrow(trsf),1000), ]
summary(df.mbc)
df.mbc
mc <- Mclust(df.mbc)
mc2 <- Mclust(df.mbc,2)
mc4 <- Mclust(df.mbc,4)
fviz_mclust(mc2, "uncertainty", palette = "jco")
fviz_mclust(mc4, "uncertainty", palette = "jco")
summary(mc)
mc2$parameters$mean
mc4$parameters$mean
mc$mean
mc$parameters$mean
# Need caret library
# To have reproducibility of the sampling
set.seed(100)
scaled <- read.csv('scaled.csv')
# Removing the first two column describing the number of the row and the city
scaled <- scaled[3:ncol(scaled)]
# Preparing data for MBC
# Keeping just numeric values
df.mbc <- scaled %>% dplyr::select(where(is.numeric))
# The column RainToday RainTomorrow and Season
x <- scaled[16:18]
dmy <- dummyVars(" ~ .", data = x)
trsf <- data.frame(predict(dmy, newdata = x))
df.mbc <- cbind(df.mbc,trsf)
df.mbc <-df.mbc[sample(nrow(df.mbc),1000), ]
# Preparing data for HC
dmy <- dummyVars(" ~ .", data = scaled)
trsf <- data.frame(predict(dmy, newdata = scaled))
# Random sampling to make the clustering computation fit in my machine
df.pc <- trsf[sample(nrow(trsf),1000), ]
summary(df.mbc)
df.mbc
mc <- Mclust(df.mbc)
mc2 <- Mclust(df.mbc,2)
mc4 <- Mclust(df.mbc,4)
fviz_mclust(mc2, "uncertainty", palette = "jco")
fviz_mclust(mc4, "uncertainty", palette = "jco")
mc2$parameters$mean
mc4$parameters$mean
mc4$parameters$mean
k2$centers[,c('MinTemp','MaxTemp','RainTodayNo','RainTodayYes','RainTomorrowNo','RainTomorrowYes','Seasonfall','Seasonspring','Seasonsummer','Seasonwinter')]
library(dplyr)
library(ggplot2)
library(kableExtra)
library(gridExtra)
library(stats)
library(cluster)
library(factoextra)
library(FactoMineR)
library(mclust)
library(caret)
# Need caret library
# To have reproducibility of the sampling
set.seed(100)
scaled <- read.csv('scaled.csv')
# Removing the first two column describing the number of the row and the city
scaled <- scaled[3:ncol(scaled)]
# Preparing data for MBC
# Keeping just numeric values
df.mbc <- scaled %>% dplyr::select(where(is.numeric))
# The column RainToday RainTomorrow and Season
x <- scaled[16:18]
dmy <- dummyVars(" ~ .", data = x)
trsf <- data.frame(predict(dmy, newdata = x))
df.mbc <- cbind(df.mbc,trsf)
df.mbc <-df.mbc[sample(nrow(df.mbc),1000), ]
# Preparing data for HC
dmy <- dummyVars(" ~ .", data = scaled)
trsf <- data.frame(predict(dmy, newdata = scaled))
# Random sampling to make the clustering computation fit in my machine
df.pc <- trsf[sample(nrow(trsf),1000), ]
summary(df.pc)
df.pc
k2 <- kmeans(df.pc, centers = 2, nstart = 25)
k3 <- kmeans(df.pc, centers = 3, nstart = 25)
k4 <- kmeans(df.pc, centers = 4, nstart = 25)
k5 <- kmeans(df.pc, centers = 5, nstart = 25)
p1 <- fviz_cluster(k2, geom = "point", data = df.pc) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df.pc) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df.pc) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = df.pc) + ggtitle("k = 5")
grid.arrange(p1, p2, p3, p4, nrow = 2)
k2$centers[,c('MinTemp','MaxTemp','RainTodayNo','RainTodayYes','RainTomorrowNo','RainTomorrowYes','Seasonfall','Seasonspring','Seasonsummer','Seasonwinter')]
res.hk <-hkmeans(df.hpc, 4)
# Need caret library
# To have reproducibility of the sampling
set.seed(100)
scaled <- read.csv('scaled.csv')
# Removing the first two column describing the number of the row and the city
scaled <- scaled[3:ncol(scaled)]
# Preparing data for MBC
# Keeping just numeric values
df.mbc <- scaled %>% dplyr::select(where(is.numeric))
# The column RainToday RainTomorrow and Season
x <- scaled[16:18]
dmy <- dummyVars(" ~ .", data = x)
trsf <- data.frame(predict(dmy, newdata = x))
df.mbc <- cbind(df.mbc,trsf)
df.mbc <-df.mbc[sample(nrow(df.mbc),1000), ]
# Preparing data for HC
dmy <- dummyVars(" ~ .", data = scaled)
trsf <- data.frame(predict(dmy, newdata = scaled))
# Random sampling to make the clustering computation fit in my machine
df.pc <- trsf[sample(nrow(trsf),1000), ]
res.hk <-hkmeans(df.hpc, 4)
summary(df.mbc)
df.mbc
mc <- Mclust(df.mbc)
mc2 <- Mclust(df.mbc,2)
mc4 <- Mclust(df.mbc,4)
fviz_mclust(mc2, "uncertainty", palette = "jco")
fviz_mclust(mc4, "uncertainty", palette = "jco")
summary(mc)
#install.packages("FactoMineR")
library(FactoMineR)
Nobel <- read.table("data_CA_NobelPrize_withMaths.csv", header=TRUE, sep=";", row.names=1,check.names=FALSE)
summary(Nobel)
setwd("~/Documents/ERASMUS/UPC/MVA/CA")
#install.packages("FactoMineR")
library(FactoMineR)
### Import data
Nobel <- read.table("data_CA_NobelPrize_withMaths.csv", header=TRUE, sep=";", row.names=1,check.names=FALSE)
summary(Nobel)
res.ca=CA(Nobel[1:8,1:6])
res.ca
barplot(res.ca$eig[,2],main="Eigenvalues", names.arg=1:nrow(res.ca$eig))
plot.CA(res.ca)
### Rows (countries)
res.ca$row
### Eigenvalues
res.ca$eig
plot.CA(res.ca,axes = c(3,4))
setwd("~/Documents/ERASMUS/UPC/MVA/PROJECT")
library(dplyr)
library(ggplot2)
library(kableExtra)
library(gridExtra)
library(stats)
library(cluster)
library(factoextra)
library(FactoMineR)
library(mclust)
library(caret)
# Need caret library
# To have reproducibility of the sampling
set.seed(100)
scaled <- read.csv('scaled.csv')
# Removing the first two column describing the number of the row and the city
scaled <- scaled[3:ncol(scaled)]
# Preparing data for MBC
# Keeping just numeric values
df.mbc <- scaled %>% dplyr::select(where(is.numeric))
# The column RainToday RainTomorrow and Season
x <- scaled[16:18]
dmy <- dummyVars(" ~ .", data = x)
trsf <- data.frame(predict(dmy, newdata = x))
df.mbc <- cbind(df.mbc,trsf)
df.mbc <-df.mbc[sample(nrow(df.mbc),1000), ]
# Preparing data for HC
dmy <- dummyVars(" ~ .", data = scaled)
trsf <- data.frame(predict(dmy, newdata = scaled))
# Random sampling to make the clustering computation fit in my machine
df.pc <- trsf[sample(nrow(trsf),1000), ]
summary(df.pc)
df.pc
k2 <- kmeans(df.pc, centers = 2, nstart = 25)
k3 <- kmeans(df.pc, centers = 3, nstart = 25)
k4 <- kmeans(df.pc, centers = 4, nstart = 25)
k5 <- kmeans(df.pc, centers = 5, nstart = 25)
p1 <- fviz_cluster(k2, geom = "point", data = df.pc) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df.pc) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df.pc) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = df.pc) + ggtitle("k = 5")
grid.arrange(p1, p2, p3, p4, nrow = 2)
fviz_nbclust(df.pc, kmeans, method = "silhouette")
k2$centers[,c('MinTemp','MaxTemp','RainTodayNo','RainTodayYes','RainTomorrowNo','RainTomorrowYes','Seasonfall','Seasonspring','Seasonsummer','Seasonwinter')]
k2$centers[,c('MinTemp','MaxTemp','RainTodayNo','RainTodayYes','RainTomorrowNo','RainTomorrowYes','Seasonfall','Seasonspring','Seasonsummer','Seasonwinter')]
# Need caret library
# To have reproducibility of the sampling
set.seed(1)
scaled <- read.csv('scaled.csv')
# Removing the first two column describing the number of the row and the city
scaled <- scaled[3:ncol(scaled)]
# Preparing data for MBC
# Keeping just numeric values
df.mbc <- scaled %>% dplyr::select(where(is.numeric))
# The column RainToday RainTomorrow and Season
x <- scaled[16:18]
dmy <- dummyVars(" ~ .", data = x)
trsf <- data.frame(predict(dmy, newdata = x))
df.mbc <- cbind(df.mbc,trsf)
df.mbc <-df.mbc[sample(nrow(df.mbc),1000), ]
# Preparing data for HC
dmy <- dummyVars(" ~ .", data = scaled)
trsf <- data.frame(predict(dmy, newdata = scaled))
# Random sampling to make the clustering computation fit in my machine
df.pc <- trsf[sample(nrow(trsf),1000), ]
summary(df.pc)
df.pc
k2 <- kmeans(df.pc, centers = 2, nstart = 25)
k3 <- kmeans(df.pc, centers = 3, nstart = 25)
k4 <- kmeans(df.pc, centers = 4, nstart = 25)
k5 <- kmeans(df.pc, centers = 5, nstart = 25)
p1 <- fviz_cluster(k2, geom = "point", data = df.pc) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df.pc) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df.pc) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = df.pc) + ggtitle("k = 5")
grid.arrange(p1, p2, p3, p4, nrow = 2)
fviz_nbclust(df.pc, kmeans, method = "silhouette")
k2$centers[,c('MinTemp','MaxTemp','RainTodayNo','RainTodayYes','RainTomorrowNo','RainTomorrowYes','Seasonfall','Seasonspring','Seasonsummer','Seasonwinter')]
# Need caret library
# To have reproducibility of the sampling
set.seed(1)
scaled <- read.csv('scaled.csv')
# Removing the first two column describing the number of the row and the city
scaled <- scaled[3:ncol(scaled)]
# Preparing data for MBC
# Keeping just numeric values
df.mbc <- scaled %>% dplyr::select(where(is.numeric))
# The column RainToday RainTomorrow and Season
x <- scaled[16:18]
dmy <- dummyVars(" ~ .", data = x)
trsf <- data.frame(predict(dmy, newdata = x))
df.mbc <- cbind(df.mbc,trsf)
df.mbc <-df.mbc[sample(nrow(df.mbc),5000), ]
# Preparing data for HC
dmy <- dummyVars(" ~ .", data = scaled)
trsf <- data.frame(predict(dmy, newdata = scaled))
# Random sampling to make the clustering computation fit in my machine
df.pc <- trsf[sample(nrow(trsf),5000), ]
summary(df.pc)
df.pc
k2 <- kmeans(df.pc, centers = 2, nstart = 25)
k3 <- kmeans(df.pc, centers = 3, nstart = 25)
k4 <- kmeans(df.pc, centers = 4, nstart = 25)
k5 <- kmeans(df.pc, centers = 5, nstart = 25)
p1 <- fviz_cluster(k2, geom = "point", data = df.pc) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df.pc) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df.pc) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = df.pc) + ggtitle("k = 5")
grid.arrange(p1, p2, p3, p4, nrow = 2)
fviz_nbclust(df.pc, kmeans, method = "silhouette")
k2$centers[,c('MinTemp','MaxTemp','RainTodayNo','RainTodayYes','RainTomorrowNo','RainTomorrowYes','Seasonfall','Seasonspring','Seasonsummer','Seasonwinter')]
res.hk <-hkmeans(df.hpc, 4)
res.hk <-hkmeans(df.pc, 4)
fviz_cluster(res.hk, palette = "jco", repel = TRUE, ggtheme = theme_classic())
res.hk$centers[,c('WindGustSpeed','WindGustDirW','WindDir9amN','WindDir9amW','WindDir3pmW','WindSpeed9am','WindSpeed3pm','Seasonsummer','Seasonwinter')]
res.hk$centers
summary(df.mbc)
df.mbc
mc <- Mclust(df.mbc)
mc2 <- Mclust(df.mbc,2)
mc4 <- Mclust(df.mbc,4)
fviz_mclust(mc2, "uncertainty", palette = "jco")
fviz_mclust(mc4, "uncertainty", palette = "jco")
mc2$parameters$mean
mc4$parameters$mean
summary(mc)
summary(mc)
mc
mc$G
mc2$parameters$mean
mc4$parameters$mean
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(kableExtra)
library(gridExtra)
library(stats)
library(cluster)
library(factoextra)
library(FactoMineR)
library(mclust)
library(caret)
# Need caret library
# To have reproducibility of the sampling
set.seed(123)
scaled <- read.csv('scaled.csv')
# Removing the first two column describing the number of the row and the city
scaled <- scaled[3:ncol(scaled)]
# Preparing data for MBC
# Keeping just numeric values
df.mbc <- scaled %>% dplyr::select(where(is.numeric))
# The column RainToday RainTomorrow and Season
x <- scaled[16:18]
dmy <- dummyVars(" ~ .", data = x)
trsf <- data.frame(predict(dmy, newdata = x))
df.mbc <- cbind(df.mbc,trsf)
df.mbc <-df.mbc[sample(nrow(df.mbc),5000), ]
# Preparing data for HC
dmy <- dummyVars(" ~ .", data = scaled)
trsf <- data.frame(predict(dmy, newdata = scaled))
# Random sampling to make the clustering computation fit in my machine
df.pc <- trsf[sample(nrow(trsf),5000), ]
summary(df.pc)
df.pc
k2 <- kmeans(df.pc, centers = 2, nstart = 25)
k3 <- kmeans(df.pc, centers = 3, nstart = 25)
k4 <- kmeans(df.pc, centers = 4, nstart = 25)
k5 <- kmeans(df.pc, centers = 5, nstart = 25)
p1 <- fviz_cluster(k2, geom = "point", data = df.pc) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df.pc) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df.pc) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = df.pc) + ggtitle("k = 5")
grid.arrange(p1, p2, p3, p4, nrow = 2)
fviz_nbclust(df.pc, kmeans, method = "silhouette")
k2$centers[,c('MinTemp','MaxTemp','RainTodayNo','RainTodayYes','RainTomorrowNo','RainTomorrowYes','Seasonfall','Seasonspring','Seasonsummer','Seasonwinter')]
res.hk <-hkmeans(df.pc, 4)
fviz_cluster(res.hk, palette = "jco", repel = TRUE, ggtheme = theme_classic())
res.hk$centers
summary(df.mbc)
df.mbc
mc <- Mclust(df.mbc)
mc2 <- Mclust(df.mbc,2)
mc4 <- Mclust(df.mbc,4)
fviz_mclust(mc2, "uncertainty", palette = "jco")
fviz_mclust(mc4, "uncertainty", palette = "jco")
mc$G
mc2$parameters$mean
mc4$parameters$mean
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(kableExtra)
library(gridExtra)
library(stats)
library(cluster)
library(factoextra)
library(FactoMineR)
library(mclust)
library(caret)
# Need caret library
# To have reproducibility of the sampling
set.seed(123)
scaled <- read.csv('scaled.csv')
# Removing the first two column describing the number of the row and the city
scaled <- scaled[3:ncol(scaled)]
# Preparing data for MBC
# Keeping just numeric values
df.mbc <- scaled %>% dplyr::select(where(is.numeric))
# The column RainToday RainTomorrow and Season
x <- scaled[16:18]
dmy <- dummyVars(" ~ .", data = x)
trsf <- data.frame(predict(dmy, newdata = x))
df.mbc <- cbind(df.mbc,trsf)
df.mbc <-df.mbc[sample(nrow(df.mbc),20000), ]
# Preparing data for HC
dmy <- dummyVars(" ~ .", data = scaled)
trsf <- data.frame(predict(dmy, newdata = scaled))
# Random sampling to make the clustering computation fit in my machine
df.pc <- trsf[sample(nrow(trsf),20000), ]
summary(df.pc)
df.pc
k2 <- kmeans(df.pc, centers = 2, nstart = 25)
k3 <- kmeans(df.pc, centers = 3, nstart = 25)
k4 <- kmeans(df.pc, centers = 4, nstart = 25)
k5 <- kmeans(df.pc, centers = 5, nstart = 25)
p1 <- fviz_cluster(k2, geom = "point", data = df.pc) + ggtitle("k = 2")
p2 <- fviz_cluster(k3, geom = "point",  data = df.pc) + ggtitle("k = 3")
p3 <- fviz_cluster(k4, geom = "point",  data = df.pc) + ggtitle("k = 4")
p4 <- fviz_cluster(k5, geom = "point",  data = df.pc) + ggtitle("k = 5")
grid.arrange(p1, p2, p3, p4, nrow = 2)
fviz_nbclust(df.pc, kmeans, method = "silhouette")
k2$centers[,c('MinTemp','MaxTemp','RainTodayNo','RainTodayYes','RainTomorrowNo','RainTomorrowYes','Seasonfall','Seasonspring','Seasonsummer','Seasonwinter')]
res.hk <-hkmeans(df.pc, 4)
fviz_cluster(res.hk, palette = "jco", repel = TRUE, ggtheme = theme_classic())
res.hk$centers
summary(df.mbc)
df.mbc
mc <- Mclust(df.mbc)
mc2 <- Mclust(df.mbc,2)
mc4 <- Mclust(df.mbc,4)
fviz_mclust(mc2, "uncertainty", palette = "jco")
fviz_mclust(mc4, "uncertainty", palette = "jco")
mc$G
mc2$parameters$mean
mc4$parameters$mean
?mca
summary(scaled)
